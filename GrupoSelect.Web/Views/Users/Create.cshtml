@model GrupoSelect.Web.ViewModel.UserVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="clearfix"></div>
<div class="row">
    <div class="col-md-12 col-sm-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>
                    Usuários <i class="fa fa-chevron-right"></i> Cadastrar
                </h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <br>
                @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @id = "create", @class = "form-horizontal form-label-left" }))
                {
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Name) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Name, new { required = "required", @class = "form-control text-uppercase" })
                            @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Cnpj) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Cnpj, new { required = "required", @class = "form-control cnpj" })
                            @Html.ValidationMessageFor(model => model.Cnpj, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Representation) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Representation, new { required = "required", @class = "form-control text-uppercase" })
                            @Html.ValidationMessageFor(model => model.Representation, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Email) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Email, new { required = "required", @class = "form-control text-uppercase" })
                            @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Login)<span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Login, new { required = "required", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Login, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Password) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.PasswordFor(model => model.Password, new { required = "required", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Profile) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            <select asp-for="Profile" id="ddlProfile" class="form-control js-example-responsive component-select" style="width: 100%">
                                <option value="">-- Selecione --</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Profile, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Active) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.DropDownListFor(model => model.Active, GrupoSelect.Web.Util.UtilWeb.GetBooleanList(), new { @class = "form-control js-example-responsive component-select", @style = "width: 100%;" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.BranchWithoutAdm) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.DropDownListFor(model => model.BranchWithoutAdm, GrupoSelect.Web.Util.UtilWeb.GetBooleanList(false), new { @class = "form-control js-example-responsive component-select", @style = "width: 100%;" })
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                    <div class="item form-group">
                        <div class="col-md-6 col-sm-6 offset-md-3">
                            <button type="button" class="btn btn-success submit">Salvar</button>
                            <a asp-action="Index" class="btn btn-danger">Cancelar</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/jquery.mask.min.js"></script>
    <script src="~/js/jquery.inputmask.bundle.min.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            FillSelect("@Url.Action("GetProfileList", "Users")", { Active: true }, "#ddlProfile")
            $('.component-select').select2();
            MaskCnpj();
        });

        function callback() {
            $('#Active').select2().val("true").trigger("change");
            $('#BranchWithoutAdm').select2().val("false").trigger("change");
        }

        $(".submit").click(function (event) {
            Create(false, false, "", callback);
        });
    </script>
}
