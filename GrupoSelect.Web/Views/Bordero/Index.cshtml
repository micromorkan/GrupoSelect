@using System.Security.Claims;
@using GrupoSelect.Domain.Util;
@using GrupoSelect.Web.Helpers;
@using System.Globalization;
@model GrupoSelect.Web.ViewModel.BorderoVM

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/daterangepicker.css" rel="stylesheet" />
<div class="clearfix"></div>
<div class="col-md-12 col-sm-12 ">
    <div class="x_panel">
        <div class="x_title">
            <h2>
                Bordero <i class="fa fa-chevron-right"></i> Consultar
            </h2>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <div class="row">
                @using (Html.BeginForm("Index", "Bordero", FormMethod.Post, new { @id = "search", @class = "form-horizontal col-md-12 col-xs-12" }))
                {
                    <div class="form-group col-md-6 col-xs-12">
                        @Html.LabelFor(model => model.UserId)
                        <select asp-for="UserId" id="ddlUser" class="form-control js-example-responsive component-select" style="width: 100%">
                            <option value="">-- Selecione --</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6 col-xs-12">
                        @Html.Label("Período")
                        <input type="text" id="dateFilter" class="form-control" value="">
                    </div>
                }
            </div>
            <div class="row">
                <div class="form-group col-md-12 col-xs-12 text-right">
                    <button id="bordero" title='Gerar Borderô' class='btn btn-info' onclick="ViewPaytable();" style="display: none;">Gerar Borderô</button>
                    <button type="button" onclick="GetBorderoData(1);" class="btn btn-primary">Pesquisar</button>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-sm-12">
                    <div class="card-box table-responsive">
                        <table id="search" class="table table-striped table-bordered" style="width:100%" data-page-length='2'>
                            <thead>
                                <tr>
                                    <th class="column text-center" data-prefix="" data-sufix="" data-column="contractNum" data-css="text-center">Nº Contrato</th>
                                    <th class="column text-center" data-prefix="" data-sufix="" data-column="proposal.user.representation" data-css="text-center">Representação</th>
                                    <th class="column text-center" data-prefix="" data-sufix="" data-column="proposal.productTypeName" data-css="text-center">Produto</th>
                                    <th class="column text-center" data-prefix="" data-sufix="" data-column="dateAproved" data-css="text-center">Data Venda</th>
                                    <th class="column text-center" data-prefix="" data-sufix="" data-column="proposal.client.name" data-css="text-center">Cliente</th>
                                    <th class="column text-center" data-prefix="R$ " data-sufix="" data-column="proposal.creditValue" data-css="text-right">Crédito</th>
                                    <th class="column text-center" data-prefix="" data-sufix="" data-column="proposal.tableTypeTax" data-css="text-center">Tabela</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/jquery.mask.min.js"></script>
    <script src="~/js/jquery.inputmask.bundle.min.js"></script>
    <script src="~/js/daterangepicker.js"></script>
    <script>
        $(document).ready(function () {
            FillSelect("@Url.Action("GetUserList", "Bordero")", null, "#ddlUser");
            $('.component-select').select2();
            moment.locale('pt-br');
            void 0 !== $.fn.daterangepicker && $("#dateFilter").daterangepicker({
                startDate: '@DateTime.Today.AddDays((int)DayOfWeek.Thursday - (int)DateTime.Today.DayOfWeek - 7).ToShortDateString()',
                endDate: '@DateTime.Today.AddDays((int)DayOfWeek.Thursday - (int)DateTime.Today.DayOfWeek - 7).AddDays(6).ToShortDateString()',
                locale: {
                    format: "DD/MM/YYYY",
                    "applyLabel": "Selecionar",
                    "cancelLabel": "Cancelar",
                }
            });

            AplicarCSSDTT();
            AplicarDTT();

            $('#ddlUser').on('select2:select', function (e) {
                $('#bordero').hide();
            });
        });

        function GetBorderoData(pagina) {
            if ($('#ddlUser').val() !== "") {
                $('#bordero').show();
                SearchBordero(pagina);
            } else {
                swal('Aviso!', 'Selecione o representante antes de pesquisar!', 'warning');
            }

        }

        function SearchBordero(pagina) {
            var form = $("#search");
            var model = form.serializeObject();

            model.StartDate = moment($('#dateFilter').data('daterangepicker').startDate._d).format('LL');
            model.EndDate = moment($('#dateFilter').data('daterangepicker').endDate._d).format('LL');

            var qtdPagina = 0;

            if (pagina == null) {
                pagina = 1;
            }

            $('#loading').show();

            $.ajax({
                url: form[0].action + "?page=" + pagina + "&qtPage=" + qtdPagina,
                type: 'POST',
                dataType: 'json',
                data: model,
                success: function (data) {

                    if (data.success) {
                        if (!$.fn.DataTable.isDataTable($('table'))) {
                            $('table').DataTable({
                                paging: false,
                                searching: true,
                                lengthChange: false,
                                dom: "Blfrtip",
                                buttons: [{
                                    extend: "excel",
                                    className: "btn btn-primary btn-sm",
                                    exportOptions: {
                                        columns: 'th:not(:last-child)'
                                    }
                                }, {
                                    extend: "pdfHtml5",
                                    orientation: 'landscape',
                                    pageSize: 'A4',
                                    className: "btn btn-primary btn-sm",
                                    exportOptions: {
                                        columns: 'th:not(:last-child)'
                                    },
                                    customize: function (doc) {
                                        doc.content[1].margin = [100, 0, 100, 0];
                                        //doc.styles.tableBodyOdd.alignment = 'center';
                                        //doc.styles.tableBodyEven.alignment = 'center';
                                    }
                                }, {
                                    extend: "print",
                                    className: "btn btn-primary btn-sm",
                                    exportOptions: {
                                        columns: 'th:not(:last-child)'
                                    }
                                }],
                                "responsive": true,
                                "bAutoWidth": false,
                                "info": false,
                                "drawCallback": function (settings) {
                                    AplicarCSSDTT();
                                }
                            });
                        }

                        var dt = $('table').DataTable().clear().draw();

                        $.each(data.object, function (i, item) {
                            var row = [];

                            $('.column').each(function () {
                                var coluna = $(this).data('column');
                                var prefix = $(this).data('prefix');
                                var sufix = $(this).data('sufix');

                                if (coluna) {

                                    var cols = coluna.split(".");

                                    if (cols.length == 1) {
                                        if (typeof (item[coluna]) === "boolean") {
                                            row.push(item[coluna] ? 'Sim' : 'Não');
                                        } else if (item[coluna] !== null && item[coluna] !== undefined && moment(item[coluna], moment.ISO_8601, true).isValid()) {
                                            row.push(moment(item[coluna]).format("DD/MM/YYYY"));
                                        } else {
                                            row.push(prefix + item[coluna] + sufix);
                                        }
                                    } else if (cols.length > 1) {
                                        var value = item[cols[0]];

                                        for (var i = 1; i < cols.length; i++) {
                                            value = value[cols[i]];
                                        }

                                        if (typeof (value) === "boolean") {
                                            row.push(value ? 'Sim' : 'Não');
                                        } else if (item[coluna] !== null && item[coluna] !== undefined && moment(item[coluna], moment.ISO_8601, true).isValid()) {
                                            row.push(moment(item[coluna]).format("DD/MM/YYYY"));
                                        } else {
                                            row.push(prefix + value + sufix);
                                        }
                                    }
                                }
                            });

                            dt.row.add(row).draw(false);
                        });

                        AplicarCSSDTT();
                        AplicarDTT();
                    } else {
                        AplicarCSSDTT();
                        AplicarDTT();

                        if (data.errors) {
                            ShowModalListWarning(data.errors);
                        } else {
                            ShowModalError(data.message);
                        }
                    }


                },
                error: function (xhr, status, error) {
                    ShowModalError('Não foi possível acessar o servidor. Entre em contato com o Administrador. ' + status + '. ' + error);
                }
            });
        }

        function ViewPaytable() {
            var link = '@Url.Action("ViewPaytable", "Bordero", new { userId = "p1", startDate = "p2", endDate = "p3" })';

            link = link.replaceAll("amp;", "");
            link = link.replace("p1", $('#ddlUser').val());
            link = link.replace("p2", moment($('#dateFilter').data('daterangepicker').startDate._d).format('DD-MM-YYYY'));
            link = link.replace("p3", moment($('#dateFilter').data('daterangepicker').endDate._d).format('DD-MM-YYYY'));

            window.open(link, '_blank').focus();
        }

    </script>
}