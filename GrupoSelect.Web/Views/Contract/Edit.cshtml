@using GrupoSelect.Domain.Util;
@using GrupoSelect.Web.Helpers;
@model GrupoSelect.Web.ViewModel.ContractVM

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="clearfix"></div>
<div class="row">
    <div class="col-md-12 col-sm-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>
                    Contrato <i class="fa fa-chevron-right"></i> Editar
                </h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <br>
                @using (Html.BeginForm("Edit", "Contract", FormMethod.Post, new { @id = "edit", @class = "form-horizontal form-label-left" }))
                {
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.DateCreate)
                    @Html.HiddenFor(model => model.Status)
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.ContractNum) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.ContractNum, new {@class = "form-control", @disabled="disabled" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Proposal.Client.Name) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Proposal.Client.Name, new {@class = "form-control", @disabled="disabled" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Proposal.Client.CPF) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Proposal.Client.CPF, new {@class = "form-control", @disabled="disabled" })
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.Status) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 ">
                            @Html.TextBoxFor(model => model.Status, new {@class = "form-control", @disabled="disabled" })
                        </div>
                    </div>
                    @if (Model.Status == Constants.CONTRACT_STATUS_CR)
                    {
                        <div class="row">
                            <div class="mt-3 mb-4 col-md-6 offset-md-3" style="background-color: #f0bebd; border-radius: 5px;">
                                <p class="lead text-center"><b>MOTIVO DA REPROVAÇÃO</b></p>
                                <p><b>Motivo: @Model.ReprovedReason</b></p>
                                <p style="text-align: justify;"><b>Descrição: @Model.ReprovedExplain </b></p>
                            </div>
                        </div>
                    }

                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.ContractConsultancyFormFile) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6" style="margin-left: 10px;">
                            <input type="file" accept="application/pdf, image/*" class="input-ficha custom-file-input form-control" id="ContractConsultancyFormFile" aria-describedby="fileHelp">
                            <label class="custom-file-label" for="ContractConsultancyFormFile" style="margin-right: 20px;">
                                Selecione um documento...
                            </label>
                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="col-form-label col-md-3 col-sm-3 label-align">
                            @Html.LabelFor(model => model.ContractFinancialAdminFormFile) <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6" style="margin-left: 10px;">
                            <input type="file" accept="application/pdf, image/*" class="input-doc custom-file-input form-control" id="ContractFinancialAdminFormFile" aria-describedby="fileHelp">
                            <label class="custom-file-label" for="ContractFinancialAdminFormFile" style="margin-right: 20px;">
                                Selecione um documento...
                            </label>
                        </div>
                    </div>

                    @if (Model.Proposal.User.BranchWithoutAdm)
                    {
                        <div class="item form-group">
                            <label class="col-form-label col-md-3 col-sm-3 label-align">
                                @Html.LabelFor(model => model.VideoAgreeFormFile) <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6" style="margin-left: 10px;">
                                <input type="file" accept="video/mp4,video/x-m4v,video/*" class="input-video custom-file-input form-control" id="VideoAgreeFormFile" aria-describedby="fileHelp">
                                <label class="custom-file-label" for="VideoAgreeFormFile" style="margin-right: 20px;">
                                    Selecione um vídeo...
                                </label>
                            </div>
                        </div>
                    }

                    <div class="ln_solid"></div>
                    <div class="item form-group">
                        <div class="col-md-6 col-sm-6 offset-md-3">
                            <button type="button" class="btn btn-success submit">Salvar</button>
                            <a asp-action="Index" class="btn btn-danger">Cancelar</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/jquery.mask.min.js"></script>
    <script src="~/js/jquery.inputmask.bundle.min.js"></script>
    <script src="~/js/jquery.maskmoney.min.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            document.querySelector('.input-ficha').addEventListener('change', function (e) {
                var fileName = document.getElementById("ContractConsultancyFormFile").files[0].name;
                var nextSibling = e.target.nextElementSibling
                nextSibling.innerText = fileName
            });

            document.querySelector('.input-doc').addEventListener('change', function (e) {
                var fileName = document.getElementById("ContractFinancialAdminFormFile").files[0].name;
                var nextSibling = e.target.nextElementSibling
                nextSibling.innerText = fileName
            });

            if ('@Model.Proposal.User.BranchWithoutAdm' === 'True') {
                document.querySelector('.input-video').addEventListener('change', function (e) {
                    var fileName = document.getElementById("VideoAgreeFormFile").files[0].name;
                    var nextSibling = e.target.nextElementSibling
                    nextSibling.innerText = fileName
                });
            }

            $('.component-select').select2();

        });

        $(".submit").click(function (event) {

            if ('@Model.Proposal.User.BranchWithoutAdm' === 'True') {
                if (document.getElementById("ContractConsultancyFormFile").files.length == 0 ||
                    document.getElementById("ContractFinancialAdminFormFile").files.length == 0 ||
                    document.getElementById("VideoAgreeFormFile").files.length == 0) {
                    swal('Aviso!', 'Selecione todos os arquivos antes salvar!', 'warning');
                }
                else {
                    Edit("@Url.Action("Index", "Contract")", false, true);
                }
            } else {
                if (document.getElementById("ContractConsultancyFormFile").files.length == 0 ||
                    document.getElementById("ContractFinancialAdminFormFile").files.length == 0) {
                    swal('Aviso!', 'Selecione todos os arquivos antes salvar!', 'warning');
                }
                else {
                    Edit("@Url.Action("Index", "Contract")", false, true);
                }
            }
        });

    </script>
}

